# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1


commands:
  destroy_infrastructure:
    steps:
      - run:
          name: delete-stack
          command: |
           aws cloudformation delete-stack \
            --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
            --region us-east-1
          when: on_fail

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  create_infrastructure:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: amazon/aws-cli
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    
    steps:
      - checkout
      - run:
          name: "Create Cloudformation Stack"
          command: |
            aws cloudformation deploy \
            --template-file template.yml \
            --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
            --region us-east-1
            
      - run: sleep 3m

  create_inventory:
    docker: 
      - image: amazon/aws-cli

    steps:
      - checkout
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
           
      - run: echo [all] >> ~/inventory
      - run: 
          name: "Create Inventory File"
          command: |
            aws ec2 describe-instances \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --filters Name=tag:Name,Values=udacity_project_instance \
            --output text > ~/inventory.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - inventory.txt
            
            
  configure_infrastructure: 
    docker:
      - image: python:3.9-alpine3.16
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["ff:d7:06:52:b4:a6:96:6d:86:b0:f3:9a:e7:44:64:f5"] 
      - run:
          name: Install Ansible
          command: |
            # Install Ansible
            apk add --no-cache tar gzip
            pip install ansible awscli
            apk add openssh-client
  #          apk add --update ansible
      - attach_workspace:
          at: ~/

      - run:
          name: Run Playbook and Configure server
          command: 
            # Your command
            ansible-playbook -i ~/inventory.txt main.yml
            
  smoke_tests:
    docker:
      - image: alpine:latest

    steps:
      - checkout
      - run:
          name: simulate_error
          command: return 1

      - destroy_infrastructure
        



      #   #install curl to the image
      # - run: apk add --update curl
      # - run:
      #     name: smoke_test
      #     command: |
      #       URL="https://blog.udacity.com/"
      #       # Test if website exists
      #       if curl -s --head ${URL} 
      #       then
      #         return 0
      #       else
      #         return 1
      #       fi
  
              

workflows:
  automatic-pipline-workflow:
    jobs:
      
      - create_infrastructure
      # - create_inventory:
      #    requires:
      #      - "create_infrastructure"
      # - configure_infrastructure:
      #    requires:
      #      - "create_inventory"
      - smoke_tests:
          requires:
            - "create_infrastructure"

